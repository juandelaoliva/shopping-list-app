version: '3.3'

services:
  # Nginx Proxy Manager - El controlador de tráfico
  proxy:
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      # Puerto público HTTP. El router ya lo redirige.
      - '8080:80'
      # Puerto público HTTPS que usaremos más tarde.
      - '8443:443'
      # Puerto para acceder a la interfaz de admin del proxy.
      - '81:81'
    volumes:
      - proxy-data:/data
      - ./letsencrypt:/etc/letsencrypt

  frontend:
    build: ./frontend
    restart: unless-stopped
    # El frontend ya no necesita puertos expuestos. El proxy se encarga.
    depends_on:
      - backend

  backend:
    build: ./backend
    restart: unless-stopped
    environment:
      # Usamos variables de entorno para que sea más fácil de configurar
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-password}@db:5432/${POSTGRES_DB:-lista_compra}
      NODE_ENV: production
    depends_on:
      - db

  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-lista_compra}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
  proxy-data: